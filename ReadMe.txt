https://github.com/KugaChan/KCOM.git

Git21
1. Calx.exe可以脱离VS的DLL运行，解决在WIN7系统上无法运行的问题
2. 去掉private修饰符，private属于缺省值，可写可不写
3. COM接收->显示使用FIFO模式，提高显示速度。当buffer大于16MB时数据丢失
4. 加入串口显示速度的统计

Git20
1. 改善关闭串口时，如果串口已经丢失了的流程
2. 在ASCII模式下，加入可以显示非ASCII数据或者过滤掉的选择
3. 加入断言功能
4. 参数恢复时使用ref参数，更加简洁

Git19
1. 解决串口接收太快时，关闭串口时会卡死的问题
2. 使用鼠标中键清零，取消使用ESC清屏
3. 串口下来菜单会变宽，可以显示全串口设备的名字
4. 使用32位数按bit保存，简化bit保存读取流程

Git18
1. 不能积攒一定长度再处理串口打印，要收到就立即处理，否则字符串会乱掉
2. 取消使用queue作为队列，更加简洁
3. 对com recv buffer要做上锁的处理
4. 如果串口接收太快，KCOM显示会跟不上，此时会丢失一些数据，会在界面上显示出来
5. 判断hex是否被修改要加try，有可能因为hex被删除或者网络断了导致访问不到从而KCOM卡死
6. 不使用定时器去刷新串口内容，而是通过线程查询，有数据则提交


Git17
1. 使用queue功能实现串口接收-显示的FIFO机制，相比top/buttom不易出现上锁问题，但没有根治
2. 优化ASCII与HEX显示相互转换的速度
3. 显示FastPrintf发送命名管道的最大长度为64，否则管道会断开

Git16
1. 有数据要显示才让串口接收线程唤醒，大幅降低CPU的占用率
2. 所有持续线程都设为后台线程，主线程结束时自动结束
3. 去掉窗体最大最小化时需要的参数，保存hex/ascii显示接收状态


Git15
1. 加入resource文件夹，目前有FastPrintf功能，通过命名管道与KCOM进行数据交互
2. 串口接收函数只让数据进入FIFO，由单独的线程把FIFO数据追加的接收文文本框里，极大地简化开关串口，开关窗体等逻辑
3. 加入FastPrintf功能，通过命名管道与Calx.exe通信，将压缩数据解压后输出到文本框里


Git14
1. 简化了界面布局，窗体尺寸可以鼠标拖动调整
2. 优化换行的时间戳逻辑


Git13
1. 修改之前版本保存log会有00数据导致识别成非文本的问题
2. 调整代码结构，更加模块化


Git12
1. 去掉UartCOM和NetCOM之间的互相Disable


Git11
1. 将所有语言都修改为英语
2. 修改NetCom，不再独立分页，与串口显示合并
3. KCOM可以最小化运行

Git10
1. 加入cmdline功能

Git9
1. readme 加入地址

Git8
1. chk windows size可以保存上一次的结果

Git7
1. 自定义窗体大小默认是开启的，而且开启后自定义大小不会做修改，防止没有输入时会出错

Git6
1. 之前版本启动后立即创建网络线程，导致CPU占用率很高，现在改成需要使用时才创建，其实连接成功后，CPU占用率也很低的
2. 现在netcom页面会显示本地的所有IP地址

Git5
1. 增加了固定光标的勾选项，勾选后，接收文本框不会动，去掉之后把文件追加回去

Git4 
1. 修改对发送框按ESC时发送字数不清空
2. 修改定时发送启动时按关机串口会不停弹窗的问题

Git3
1. 修改ReadMe文件，测试Git使用

Git2
1. 在窗体名字上加上KCOM所在的文件路径，COM名字等信息


Git1
1. KCOM GIT 第一个版本
